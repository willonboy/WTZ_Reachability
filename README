
USE DEMO:

First start the default network monitor:

[Reachability startDefaultMonitor];


Second USE BLOCK:


- (void)useBlockDemo;
{
    [Reachability addObserver:^(NetworkStatus status){
        NSString *msg = nil;
        if (status == NotReachable)
        {
            msg = @"无网络";
        }
        else if (status == ReachableViaWiFi)
        {
            msg = @"WIFI网络";
        }
        else
        {
            msg = @"2G/3G网络";
        }
        
        UIAlertView *alert = [[UIAlertView alloc] initWithTitle:nil message:msg delegate:nil cancelButtonTitle:@"sure" otherButtonTitles: nil];
        [alert performSelectorOnMainThread:@selector(show) withObject:nil waitUntilDone:NO];
        [alert release];
        alert = nil;
    }];
    
    // [Reachability addObserver:nil haveNetworkCallbackBlock:^(NetworkStatus status){
    //     NSString *msg = nil;
    //     if (status == NotReachable)
    //     {
    //         msg = @"无网络";
    //     }
    //     else if (status == ReachableViaWiFi)
    //     {
    //         msg = @"WIFI网络";
    //     }
    //     else
    //     {
    //         msg = @"2G/3G网络";
    //     }
        
    //     UIAlertView *alert = [[UIAlertView alloc] initWithTitle:nil message:msg delegate:nil cancelButtonTitle:@"sure" otherButtonTitles: nil];
    //     [alert performSelectorOnMainThread:@selector(show) withObject:nil waitUntilDone:NO];
    //     [alert release];
    //     alert = nil;
    // } isIgnoreWWAN:NO];
    
    
    // [Reachability addObserver:^{
    //     UIAlertView *alert = [[UIAlertView alloc] initWithTitle:nil message:@"无网络" delegate:nil cancelButtonTitle:@"sure" otherButtonTitles: nil];
    //     [alert performSelectorOnMainThread:@selector(show) withObject:nil waitUntilDone:NO];
    //     [alert release];
    //     alert = nil;
    // } wifiCallbackBlock:^{
    //     UIAlertView *alert = [[UIAlertView alloc] initWithTitle:nil message: @"WIFI网络" delegate:nil cancelButtonTitle:@"sure" otherButtonTitles: nil];
    //     [alert performSelectorOnMainThread:@selector(show) withObject:nil waitUntilDone:NO];
    //     [alert release];
    //     alert = nil;
    // } wwanCallbackBlock:^{
    //     UIAlertView *alert = [[UIAlertView alloc] initWithTitle:nil message:@"2G/3G网络" delegate:nil cancelButtonTitle:@"sure" otherButtonTitles: nil];
    //     [alert performSelectorOnMainThread:@selector(show) withObject:nil waitUntilDone:NO];
    //     [alert release];
    //     alert = nil;
    // }];
    
}






OR USE SEL :


- (void)noNetwork
{
    UIAlertView *alert = [[UIAlertView alloc] initWithTitle:nil message:@"无网络" delegate:nil cancelButtonTitle:@"sure" otherButtonTitles: nil];
    [alert performSelectorOnMainThread:@selector(show) withObject:nil waitUntilDone:NO];
    [alert release];
    alert = nil;
}

- (void)wifiNetwork
{
    UIAlertView *alert = [[UIAlertView alloc] initWithTitle:nil message: @"WIFI网络" delegate:nil cancelButtonTitle:@"sure" otherButtonTitles: nil];
    [alert performSelectorOnMainThread:@selector(show) withObject:nil waitUntilDone:NO];
    [alert release];
    alert = nil;
}

- (void)wwanNetwork
{
    UIAlertView *alert = [[UIAlertView alloc] initWithTitle:nil message:@"2G/3G网络" delegate:nil cancelButtonTitle:@"sure" otherButtonTitles: nil];
    [alert performSelectorOnMainThread:@selector(show) withObject:nil waitUntilDone:NO];
    [alert release];
    alert = nil;
}

- (void)haveNetwork:(NSNumber *) info //NOTICE HERE  info is NSNumber class entity
{
    NetworkStatus status = (NetworkStatus)[info intValue];
    
    if (ReachableViaWiFi == status)
    {
        [self wifiNetwork];
    }
    else if(ReachableViaWWAN == status)
    {
        [self wwanNetwork];
    }
    else
    {
        [self noNetwork];
    }
}

- (void)useDelegateDemo;
{
    [Reachability addObserver:self callback:@selector(haveNetwork:)];
    //[Reachability addObserver:self noNetworkCallback:@selector(noNetwork) haveNetworkCallback:@selector(haveNetwork:) isIgnoreWWAN:NO];
    //[Reachability addObserver:self noNetworkCallback:@selector(noNetwork) wifiCallback:@selector(wifiNetwork) wwanCallback:@selector(wwanNetwork)];
}



Third  remove network observer if you use SEL:

 [Reachability removeObserver:self];

